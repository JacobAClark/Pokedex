{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\PokemonCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './PokemonCards.css';\nimport PokeColor from './TypeEnum.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RenderPokemon = text => {\n  _s();\n\n  const [rawPokemonList, setRawPokemonList] = useState([]);\n  const [[pokemonId, pokemon], setPokemon] = useState([0, []]);\n\n  const getPokemonData = async id => {\n    //Move this out somehow, to avoid calling on every render \n    try {\n      const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\n      const pokemonPromise = await res.json();\n      return pokemonPromise;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const sortPokemonList = rawPokemonList.filter(poke => {\n    if (text.input === \"\") {\n      return poke;\n    } else {\n      return poke.name.toLowerCase().includes(text.input);\n    }\n  });\n\n  const updatePokemonId = e => {\n    rawPokemonList.map(poke => {\n      if (poke.id == e.target.id) {\n        setPokemon([e.target.id, poke]);\n      }\n    });\n  };\n\n  useEffect(i => {\n    const promises = [];\n\n    for (let i = 1; i < 2; i++) {\n      promises.push(getPokemonData(i));\n    }\n\n    Promise.all(promises).then(results => {\n      setRawPokemonList(results);\n    });\n  }, []);\n\n  const PokemonCard = props => {\n    const colours = [];\n    props.pokemonToUse.types.map(typeData => colours.push(PokeColor[typeData.type.name]));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: \"linear-gradient('120deg', '\" + (colours.length === 1) ? colours[0] + \"'\" : colours[0] + \"','\" + colours[1] + \"'\" + \");\",\n        height: '200px',\n        borderRadius: '5px'\n      },\n      id: props.pokemonToUse.id,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + props.pokemonToUse.id + '.svg',\n        className: \"poke-img\",\n        id: props.pokemonToUse.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: props.pokemonToUse.id,\n          children: props.pokemonToUse.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: sortPokemonList.map(poke => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: updatePokemonId,\n        id: poke.id,\n        children: /*#__PURE__*/_jsxDEV(PokemonCard, {\n          pokemonToUse: poke\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: pokemonId === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click a pokemon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + pokemonId + '.svg',\n          className: \"big-poke-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name - \", pokemon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RenderPokemon, \"+TXzhsJXlG2dTq9va0iKocpHofQ=\");\n\n_c = RenderPokemon;\nexport default RenderPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderPokemon\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/PokemonCards.js"],"names":["React","useEffect","useState","PokeColor","RenderPokemon","text","rawPokemonList","setRawPokemonList","pokemonId","pokemon","setPokemon","getPokemonData","id","res","fetch","pokemonPromise","json","e","console","log","sortPokemonList","filter","poke","input","name","toLowerCase","includes","updatePokemonId","map","target","i","promises","push","Promise","all","then","results","PokemonCard","props","colours","pokemonToUse","types","typeData","type","backgroundImage","length","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './PokemonCards.css'\r\nimport PokeColor from './TypeEnum.ts'\r\n\r\nconst RenderPokemon = (text) => {\r\n  const [rawPokemonList, setRawPokemonList] = useState([]);\r\n  const [[pokemonId, pokemon], setPokemon] = useState([0, []]);\r\n\r\n  const getPokemonData = async (id) => {\r\n    //Move this out somehow, to avoid calling on every render \r\n    try {\r\n      const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\r\n      const pokemonPromise = await res.json();\r\n      return pokemonPromise;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const sortPokemonList = rawPokemonList.filter((poke) => {\r\n    if(text.input === \"\") {\r\n      return poke;\r\n    } else {\r\n      return poke.name.toLowerCase().includes(text.input);\r\n    }\r\n  })\r\n\r\n  const updatePokemonId = (e) => {\r\n    rawPokemonList.map(poke => {\r\n      if(poke.id == e.target.id) {\r\n        setPokemon([e.target.id, poke]);\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect((i) => {\r\n    const promises = [];\r\n    for (let i = 1; i < 2; i++) {\r\n      promises.push(getPokemonData(i));\r\n    }\r\n    Promise.all(promises).then((results)=>{\r\n      setRawPokemonList(results);\r\n    })\r\n  }, []);\r\n\r\n  const PokemonCard = (props) => {\r\n    const colours = []\r\n    props.pokemonToUse.types.map((typeData) => (\r\n      colours.push(PokeColor[typeData.type.name])\r\n    ))\r\n    return (\r\n      <div style={{\r\n        backgroundImage: \"linear-gradient('120deg', '\" + (colours.length === 1) ? (\r\n          colours[0] + \"'\"\r\n        ) : (\r\n          colours[0] + \"','\" + colours[1] + \"'\"\r\n        ) + \");\",\r\n        height: '200px',\r\n        borderRadius: '5px'}} id={props.pokemonToUse.id}>\r\n        <img src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + props.pokemonToUse.id + '.svg'} className='poke-img' id={props.pokemonToUse.id}/>\r\n        <div className='card-text-container'>\r\n          <p id={props.pokemonToUse.id}>{props.pokemonToUse.name}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='card-container'>\r\n      {sortPokemonList.map(poke=>(\r\n        <div className='card' onClick={updatePokemonId} id={poke.id}>\r\n          <PokemonCard pokemonToUse={poke} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n    <div className='content-container'>\r\n      {(pokemonId === 0) ? (\r\n        <p>Click a pokemon!</p>\r\n      ) : (\r\n        <>\r\n        <img src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + pokemonId + '.svg'} className='big-poke-img'></img>\r\n        <p>Name - {pokemon.name}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RenderPokemon;"]},"metadata":{},"sourceType":"module"}