{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\PokemonTypeButton\\\\PokemonTypeButton.js\";\nimport React from \"react\";\nimport PokeColour from \"../TypeEnum.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonTypeButton = props => {\n  const typeColour = PokeColour[props.typeString];\n  const colourRGB = [typeColour.slice(1, 3), typeColour.slice(3, 5), typeColour.slice(5, 7)];\n  const lighterColour = colourRGB.map(colour => Math.round(parseInt(colour, 16) * 1.4)).join();\n  const darkerColour = colourRGB.map(colour => Math.round(parseInt(colour, 16) * 0.6)).join();\n  let colour = 'rgb(0,0,0)';\n\n  if (Math.round(parseInt(colourRGB[2]) * 0.6) < 70) {\n    colour = 'rgb(255,255,255)';\n  }\n\n  const gradientString = 'rgb(' + lighterColour + ')' + ', rgb(' + darkerColour + ')';\n\n  if (props.glow) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundImage: \"linear-gradient(120deg, \" + gradientString + \")\",\n        borderRadius: \"5px\",\n        height: '30px',\n        width: '80px',\n        textTransform: 'capitalize',\n        color: colour\n      },\n      value: props.typeString,\n      children: props.typeString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundImage: \"linear-gradient(120deg, \" + gradientString + \")\",\n        borderRadius: \"5px\",\n        height: '30px',\n        width: '80px',\n        textTransform: 'capitalize',\n        boxShadow: '0 5px 15px rgba(' + darkerColour + ', .8)',\n        color: colour\n      },\n      value: props.typeString,\n      children: props.typeString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = PokemonTypeButton;\nexport default PokemonTypeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonTypeButton\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/PokemonTypeButton/PokemonTypeButton.js"],"names":["React","PokeColour","PokemonTypeButton","props","typeColour","typeString","colourRGB","slice","lighterColour","map","colour","Math","round","parseInt","join","darkerColour","gradientString","glow","backgroundImage","borderRadius","height","width","textTransform","color","boxShadow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;;AAGA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAMC,UAAU,GAAGH,UAAU,CAACE,KAAK,CAACE,UAAP,CAA7B;AACA,QAAMC,SAAS,GAAG,CAACF,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAD,EAAyBH,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAzB,EAAiDH,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAjD,CAAlB;AACA,QAAMC,aAAa,GAAGF,SAAS,CAACG,GAAV,CAAcC,MAAM,IAAKC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACH,MAAD,EAAS,EAAT,CAAR,GAAuB,GAAlC,CAAzB,EAAkEI,IAAlE,EAAtB;AACA,QAAMC,YAAY,GAAGT,SAAS,CAACG,GAAV,CAAcC,MAAM,IAAKC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACH,MAAD,EAAS,EAAT,CAAR,GAAuB,GAAlC,CAAzB,EAAkEI,IAAlE,EAArB;AACA,MAAIJ,MAAM,GAAG,YAAb;;AACA,MAAIC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACP,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyB,GAApC,IAA2C,EAA/C,EAAoD;AAChDI,IAAAA,MAAM,GAAG,kBAAT;AACH;;AACD,QAAMM,cAAc,GAAG,SAASR,aAAT,GAAyB,GAAzB,GAA+B,QAA/B,GAA0CO,YAA1C,GAAyD,GAAhF;;AACA,MAAGZ,KAAK,CAACc,IAAT,EAAe;AACb,wBACE;AAAQ,MAAA,KAAK,EAAE;AACbC,QAAAA,eAAe,EAAE,6BAA6BF,cAA7B,GAA8C,GADlD;AAEbG,QAAAA,YAAY,EAAE,KAFD;AAGbC,QAAAA,MAAM,EAAE,MAHK;AAIbC,QAAAA,KAAK,EAAE,MAJM;AAKbC,QAAAA,aAAa,EAAE,YALF;AAMbC,QAAAA,KAAK,EAAEb;AANM,OAAf;AAMkB,MAAA,KAAK,EAAEP,KAAK,CAACE,UAN/B;AAAA,gBAOKF,KAAK,CAACE;AAPX;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD,MAYO;AACL,wBACE;AAAQ,MAAA,KAAK,EAAE;AACba,QAAAA,eAAe,EAAE,6BAA6BF,cAA7B,GAA8C,GADlD;AAEbG,QAAAA,YAAY,EAAE,KAFD;AAGbC,QAAAA,MAAM,EAAE,MAHK;AAIbC,QAAAA,KAAK,EAAE,MAJM;AAKbC,QAAAA,aAAa,EAAE,YALF;AAMbE,QAAAA,SAAS,EAAE,qBAAqBT,YAArB,GAAoC,OANlC;AAObQ,QAAAA,KAAK,EAAEb;AAPM,OAAf;AAOkB,MAAA,KAAK,EAAEP,KAAK,CAACE,UAP/B;AAAA,gBAQKF,KAAK,CAACE;AARX;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;AACJ,CApCD;;KAAMH,iB;AAsCN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\r\nimport PokeColour from \"../TypeEnum.ts\";\r\n\r\n\r\nconst PokemonTypeButton = (props) => {\r\n    const typeColour = PokeColour[props.typeString];\r\n    const colourRGB = [typeColour.slice(1, 3), typeColour.slice(3, 5), typeColour.slice(5, 7)];\r\n    const lighterColour = colourRGB.map(colour => (Math.round(parseInt(colour, 16) * 1.4))).join();\r\n    const darkerColour = colourRGB.map(colour => (Math.round(parseInt(colour, 16) * 0.6))).join();\r\n    let colour = 'rgb(0,0,0)';\r\n    if((Math.round(parseInt(colourRGB[2]) * 0.6) < 70)) {\r\n        colour = 'rgb(255,255,255)';\r\n    }\r\n    const gradientString = 'rgb(' + lighterColour + ')' + ', rgb(' + darkerColour + ')';\r\n    if(props.glow) {\r\n      return (\r\n        <button style={{\r\n          backgroundImage: \"linear-gradient(120deg, \" + gradientString + \")\",\r\n          borderRadius: \"5px\",\r\n          height: '30px',\r\n          width: '80px',\r\n          textTransform: 'capitalize',\r\n          color: colour}} value={props.typeString}>\r\n            {props.typeString}\r\n        </button>\r\n      )  \r\n    } else {\r\n      return (\r\n        <button style={{\r\n          backgroundImage: \"linear-gradient(120deg, \" + gradientString + \")\",\r\n          borderRadius: \"5px\",\r\n          height: '30px',\r\n          width: '80px',\r\n          textTransform: 'capitalize',\r\n          boxShadow: '0 5px 15px rgba(' + darkerColour + ', .8)',\r\n          color: colour}} value={props.typeString}>\r\n            {props.typeString}\r\n        </button>\r\n      )\r\n    }\r\n}\r\n\r\nexport default PokemonTypeButton;"]},"metadata":{},"sourceType":"module"}