{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\RenderPokemon\\\\RenderPokemon.js\";\nimport React, { useEffect, useState } from 'react';\nimport './RenderPokemon.css';\nimport PokemonCard from '../PokemonCard/PokemonCard.js';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RenderPokemonCards = props => {\n  let typeBoolean = false;\n  const sortPokemonList = rawPokemonList.filter(poke => {\n    typeBoolean = fasle;\n    poke.types.map(typeData => {\n      if (props.typesToDisplay.includes(typeData.type.name)) {\n        typeBoolean = true;\n      }\n    });\n\n    if (props.typesToDisplay.length === 0 || typeBoolean) {\n      if (props.input === \"\") {\n        return poke;\n      }\n    }\n\n    return poke.name.toLowerCase().includes(text.input);\n  });\n  return sortPokemonList.map(poke => {\n    let toRender = false;\n\n    if (typesToDisplay.length === 0) {\n      toRender = true;\n    } else {\n      poke.types.map(typeData => {\n        if (typesToDisplay.includes(typeData.type.name)) {\n          toRender = true;\n        }\n      });\n    }\n\n    if (toRender) {\n      return /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"motion-card\",\n        initial: false,\n        whileTap: {\n          scale: 0.8\n        },\n        children: /*#__PURE__*/_jsxDEV(PokemonCard, {\n          pokemonToUse: poke,\n          updateIdCall: updatePokemonId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  });\n};\n\n_c = RenderPokemonCards;\nexport default RenderPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderPokemonCards\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/RenderPokemon/RenderPokemon.js"],"names":["React","useEffect","useState","PokemonCard","motion","RenderPokemonCards","props","typeBoolean","sortPokemonList","rawPokemonList","filter","poke","fasle","types","map","typeData","typesToDisplay","includes","type","name","length","input","toLowerCase","text","toRender","scale","updatePokemonId","RenderPokemon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,MAAT,QAAuB,eAAvB;;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAGpC,MAAIC,WAAW,GAAG,KAAlB;AACA,QAAMC,eAAe,GAAGC,cAAc,CAACC,MAAf,CAAuBC,IAAD,IAAU;AACtDJ,IAAAA,WAAW,GAAGK,KAAd;AACAD,IAAAA,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,QAAD,IAAc;AAC3B,UAAGT,KAAK,CAACU,cAAN,CAAqBC,QAArB,CAA8BF,QAAQ,CAACG,IAAT,CAAcC,IAA5C,CAAH,EAAsD;AACpDZ,QAAAA,WAAW,GAAG,IAAd;AACD;AACF,KAJD;;AAKA,QAAGD,KAAK,CAACU,cAAN,CAAqBI,MAArB,KAAgC,CAAhC,IAAqCb,WAAxC,EAAqD;AACnD,UAAGD,KAAK,CAACe,KAAN,KAAgB,EAAnB,EAAuB;AACrB,eAAOV,IAAP;AACD;AACF;;AACD,WAAOA,IAAI,CAACQ,IAAL,CAAUG,WAAV,GAAwBL,QAAxB,CAAiCM,IAAI,CAACF,KAAtC,CAAP;AACD,GAbuB,CAAxB;AAeA,SACEb,eAAe,CAACM,GAAhB,CAAqBH,IAAD,IAAU;AAC5B,QAAIa,QAAQ,GAAG,KAAf;;AACA,QAAGR,cAAc,CAACI,MAAf,KAA0B,CAA7B,EAAgC;AAC9BI,MAAAA,QAAQ,GAAG,IAAX;AACD,KAFD,MAEO;AACLb,MAAAA,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,QAAD,IAAc;AAC3B,YAAGC,cAAc,CAACC,QAAf,CAAwBF,QAAQ,CAACG,IAAT,CAAcC,IAAtC,CAAH,EAAgD;AAC9CK,UAAAA,QAAQ,GAAG,IAAX;AACD;AACF,OAJD;AAKD;;AACD,QAAGA,QAAH,EAAa;AACX,0BACE,QAAC,MAAD,CAAQ,GAAR;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAoC,QAAA,OAAO,EAAE,KAA7C;AAAoD,QAAA,QAAQ,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAA9D;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,YAAY,EAAEd,IAA3B;AAAiC,UAAA,YAAY,EAAEe;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAMO;AACL,0BACE,qCADF;AAGD;AACF,GAtBD,CADF;AAyBD,CA5CD;;KAAMrB,kB;AA8CN,eAAesB,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './RenderPokemon.css'\r\nimport PokemonCard from '../PokemonCard/PokemonCard.js'\r\nimport { motion } from 'framer-motion';\r\n\r\nconst RenderPokemonCards = (props) => {\r\n\r\n\r\n  let typeBoolean = false;\r\n  const sortPokemonList = rawPokemonList.filter((poke) => {\r\n    typeBoolean = fasle;\r\n    poke.types.map((typeData) => {\r\n      if(props.typesToDisplay.includes(typeData.type.name)) {\r\n        typeBoolean = true;\r\n      }\r\n    })\r\n    if(props.typesToDisplay.length === 0 || typeBoolean) {\r\n      if(props.input === \"\") {\r\n        return poke;\r\n      }\r\n    }\r\n    return poke.name.toLowerCase().includes(text.input);\r\n  })\r\n\r\n  return (\r\n    sortPokemonList.map((poke) => {\r\n      let toRender = false;\r\n      if(typesToDisplay.length === 0) {\r\n        toRender = true;\r\n      } else {\r\n        poke.types.map((typeData) => {\r\n          if(typesToDisplay.includes(typeData.type.name)) {\r\n            toRender = true;\r\n          }\r\n        })\r\n      }\r\n      if(toRender) {\r\n        return(\r\n          <motion.div className='motion-card' initial={false} whileTap={{scale: 0.8}}>\r\n            <PokemonCard pokemonToUse={poke} updateIdCall={updatePokemonId}/>\r\n          </motion.div>\r\n        )\r\n      } else {\r\n        return (\r\n          <></>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}\r\n\r\nexport default RenderPokemon;"]},"metadata":{},"sourceType":"module"}