{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\PokemonCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './PokemonCards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RenderPokemon = text => {\n  _s();\n\n  const [rawPokemonList, setRawPokemonList] = useState([]);\n  const [pokemonId, setPokemonId] = useState(0);\n\n  const getPokemonData = async id => {\n    //Move this out somehow, to avoid calling on every render \n    try {\n      const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\n      const pokemon = await res.json();\n      return pokemon;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const sortPokemonList = rawPokemonList.filter(poke => {\n    if (text.input === \"\") {\n      return poke;\n    } else {\n      return poke.name.toLowerCase().includes(text.input);\n    }\n  });\n\n  const updatePokemonId = e => {\n    setPokemonId(e.target.id);\n  };\n\n  useEffect(i => {\n    const promises = [];\n\n    for (let i = 1; i < 152; i++) {\n      promises.push(getPokemonData(i));\n    }\n\n    Promise.all(promises).then(results => {\n      setRawPokemonList(results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: sortPokemonList.map(poke => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: updatePokemonId,\n        id: poke.id,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + poke.id + '.svg',\n          className: \"PokeImg\",\n          id: poke.id\n        }, poke.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: poke.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Poke Content - ID = \", pokemonId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RenderPokemon, \"twk//qnF7N2uP62qCi9+M5dmKfU=\");\n\n_c = RenderPokemon;\nexport default RenderPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderPokemon\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/PokemonCards.js"],"names":["React","useEffect","useState","RenderPokemon","text","rawPokemonList","setRawPokemonList","pokemonId","setPokemonId","getPokemonData","id","res","fetch","pokemon","json","e","console","log","sortPokemonList","filter","poke","input","name","toLowerCase","includes","updatePokemonId","target","i","promises","push","Promise","all","then","results","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;;;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAAA;;AAC9B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMO,cAAc,GAAG,MAAOC,EAAP,IAAc;AACnC;AACA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuCF,EAAxC,CAAvB;AACA,YAAMG,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AACA,aAAOD,OAAP;AACD,KAJD,CAIE,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GATD;;AAWA,QAAMG,eAAe,GAAGb,cAAc,CAACc,MAAf,CAAuBC,IAAD,IAAU;AACtD,QAAGhB,IAAI,CAACiB,KAAL,KAAe,EAAlB,EAAsB;AACpB,aAAOD,IAAP;AACD,KAFD,MAEO;AACL,aAAOA,IAAI,CAACE,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCpB,IAAI,CAACiB,KAAtC,CAAP;AACD;AACF,GANuB,CAAxB;;AAQA,QAAMI,eAAe,GAAIV,CAAD,IAAO;AAC7BP,IAAAA,YAAY,CAACO,CAAC,CAACW,MAAF,CAAShB,EAAV,CAAZ;AACD,GAFD;;AAMAT,EAAAA,SAAS,CAAE0B,CAAD,IAAO;AACf,UAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BC,MAAAA,QAAQ,CAACC,IAAT,CAAcpB,cAAc,CAACkB,CAAD,CAA5B;AACD;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBI,IAAtB,CAA4BC,OAAD,IAAW;AACpC3B,MAAAA,iBAAiB,CAAC2B,OAAD,CAAjB;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGf,eAAe,CAACgB,GAAhB,CAAoBd,IAAI,iBACvB;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAEK,eAA/B;AAAgD,QAAA,EAAE,EAAEL,IAAI,CAACV,EAAzD;AAAA,gCACE;AAAK,UAAA,GAAG,EAAE,gGAAgGU,IAAI,CAACV,EAArG,GAA0G,MAApH;AAA4H,UAAA,SAAS,EAAC,SAAtI;AAA8J,UAAA,EAAE,EAAEU,IAAI,CAACV;AAAvK,WAAqJU,IAAI,CAACV,EAA1J;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAA,sBAAIU,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADA,eAWA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE;AAAA,4CAAyBf,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA,kBADF;AAiBD,CAxDD;;GAAMJ,a;;KAAAA,a;AA0DN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './PokemonCards.css'\r\n\r\nconst RenderPokemon = (text) => {\r\n  const [rawPokemonList, setRawPokemonList] = useState([]);\r\n  const [pokemonId, setPokemonId] = useState(0);\r\n\r\n  const getPokemonData = async (id) => {\r\n    //Move this out somehow, to avoid calling on every render \r\n    try {\r\n      const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\r\n      const pokemon = await res.json();\r\n      return pokemon;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const sortPokemonList = rawPokemonList.filter((poke) => {\r\n    if(text.input === \"\") {\r\n      return poke;\r\n    } else {\r\n      return poke.name.toLowerCase().includes(text.input);\r\n    }\r\n  })\r\n\r\n  const updatePokemonId = (e) => {\r\n    setPokemonId(e.target.id);\r\n  }\r\n\r\n\r\n\r\n  useEffect((i) => {\r\n    const promises = [];\r\n    for (let i = 1; i < 152; i++) {\r\n      promises.push(getPokemonData(i));\r\n    }\r\n    Promise.all(promises).then((results)=>{\r\n      setRawPokemonList(results);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className='card-container'>\r\n      {sortPokemonList.map(poke=>(\r\n        <div className='card' onClick={updatePokemonId} id={poke.id}>\r\n          <img src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + poke.id + '.svg'} className='PokeImg' key={poke.id} id={poke.id}/>\r\n          <div className='container'>\r\n            <p>{poke.name}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    <div className='content-container'>\r\n      <p> Poke Content - ID = {pokemonId}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RenderPokemon;"]},"metadata":{},"sourceType":"module"}