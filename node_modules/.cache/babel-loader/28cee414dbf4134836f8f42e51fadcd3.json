{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { cold } from 'react-hot-loader';\nimport { AnimatePresence } from 'framer-motion';\nimport './App.css';\nimport RenderPokemonCards from './RenderPokemon/RenderPokemon.js';\nimport PokemonTypeButton from './PokemonTypeButton/PokemonTypeButton.js';\nimport RenderPokemonInfo from './PokemonInfo/PokemonInfo.js';\nimport { getPokemonData } from './APIHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [inputString, setInputString] = useState(\"\");\n  const [rawPokemonList, setRawPokemonList] = useState([]);\n  const [pokemonToRender, setPokemonToRender] = useState([]);\n  const [pokemon, setPokemon] = useState([]);\n  const pokemonTypeList = ['grass', 'poison', 'fire', 'flying', 'water', 'bug', 'normal', 'electric', 'ground', 'fairy', 'fighting', 'psychic', 'rock', 'steel', 'ice', 'ghost', 'dragon'];\n  const [typesToDisplay, setTypesToDisplay] = useState([]);\n\n  const deselectPokemon = () => {\n    setPokemon([]);\n  };\n\n  useEffect(i => {\n    setRawPokemonList(getPokemonData);\n  }, []);\n\n  const updateInput = e => {\n    const lowerString = e.target.value.toLowerCase();\n    setInputString(lowerString);\n  };\n\n  const updatePokemon = pokeToChangeTo => {\n    setPokemon(pokeToChangeTo);\n  };\n\n  const resetTypesToDisplay = e => {};\n\n  const updateTypesToDisplay = e => {\n    if (typesToDisplay.length === 0) {\n      const newTypesList = [e.target.value];\n      setTypesToDisplay(newTypesList);\n    } else {\n      if (typesToDisplay.includes(e.target.value)) {\n        const newTypesList = typesToDisplay.filter(type => type !== e.target.value);\n        setTypesToDisplay(newTypesList);\n      } else {\n        const newTypesList = [e.target.value];\n        setTypesToDisplay(typesToDisplay.concat(newTypesList));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deselectPokemon(),\n          children: \" Clear Poke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn-icons.flaticon.com/png/512/868/premium/868596.png?token=exp=1647880908~hmac=5e802c3c8b8423596716ca9353212d17\",\n          className: \"poke-ball-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search For a Pokemon!\",\n          onChange: updateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(RenderPokemonCards, {\n          pokeList: rawPokemonList,\n          searchInput: inputString,\n          typesToDisplay: typesToDisplay,\n          updatePokemon: updatePokemon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-container\",\n        children: [pokemonTypeList.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-button\",\n          onClick: updateTypesToDisplay,\n          children: /*#__PURE__*/_jsxDEV(PokemonTypeButton, {\n            typeString: type,\n            isButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Reset! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: typesToDisplay.map(type => /*#__PURE__*/_jsxDEV(PokemonTypeButton, {\n            typeString: type,\n            isButton: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: pokemon.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pick a pokemon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        exitBeforeEnter: true,\n        children: /*#__PURE__*/_jsxDEV(RenderPokemonInfo, {\n          pokemonToUse: pokemon\n        }, pokemon.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"OzL0ntaSqXpLgTiyKOFyUEfCQEU=\");\n\n_c = App;\nexport default _c2 = cold(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/App.js"],"names":["React","useState","useEffect","cold","AnimatePresence","RenderPokemonCards","PokemonTypeButton","RenderPokemonInfo","getPokemonData","App","inputString","setInputString","rawPokemonList","setRawPokemonList","pokemonToRender","setPokemonToRender","pokemon","setPokemon","pokemonTypeList","typesToDisplay","setTypesToDisplay","deselectPokemon","i","updateInput","e","lowerString","target","value","toLowerCase","updatePokemon","pokeToChangeTo","resetTypesToDisplay","updateTypesToDisplay","length","newTypesList","includes","filter","type","concat","map","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { cold } from 'react-hot-loader';\nimport { AnimatePresence } from 'framer-motion';\nimport './App.css';\nimport RenderPokemonCards from './RenderPokemon/RenderPokemon.js';\nimport PokemonTypeButton from './PokemonTypeButton/PokemonTypeButton.js';\nimport RenderPokemonInfo from './PokemonInfo/PokemonInfo.js'\nimport { getPokemonData } from './APIHandler';\n\nconst App = () => {\n  const [inputString, setInputString] = useState(\"\");\n  const [rawPokemonList, setRawPokemonList] = useState([]);\n  const [pokemonToRender, setPokemonToRender] = useState([]);\n  const [pokemon, setPokemon] = useState([]);\n  const pokemonTypeList = ['grass', 'poison', 'fire', 'flying', 'water', 'bug', 'normal', 'electric', 'ground', 'fairy', 'fighting', 'psychic', 'rock', 'steel', 'ice', 'ghost', 'dragon'];\n  const [typesToDisplay, setTypesToDisplay] = useState([]);\n\n\n  const deselectPokemon = () => {\n    setPokemon([]);\n  }\n\n  useEffect((i) => {\n    setRawPokemonList(getPokemonData);\n  }, []);\n\n  const updateInput = (e) => {\n    const lowerString = e.target.value.toLowerCase();\n    setInputString(lowerString);\n  }\n\n  const updatePokemon = (pokeToChangeTo) => {\n    setPokemon(pokeToChangeTo);\n  }\n\n  const resetTypesToDisplay = (e) => {\n\n  }\n\n  const updateTypesToDisplay = (e) => {\n    if(typesToDisplay.length === 0) {\n      const newTypesList = [e.target.value];\n      setTypesToDisplay(newTypesList);\n    } else {\n      if(typesToDisplay.includes(e.target.value)) {\n        const newTypesList = typesToDisplay.filter((type) => type !== e.target.value);\n        setTypesToDisplay(newTypesList);\n      } else {\n        const newTypesList = [e.target.value];\n        setTypesToDisplay(typesToDisplay.concat(newTypesList));\n      }\n    }\n  }\n\n  return (\n    <>\n    <div className='sidebar-container'>\n      <div className='search-bar-container'>\n        <button onClick={() => deselectPokemon()}> Clear Poke</button> \n        <img src='https://cdn-icons.flaticon.com/png/512/868/premium/868596.png?token=exp=1647880908~hmac=5e802c3c8b8423596716ca9353212d17' className='poke-ball-img' />\n        <input type='text' placeholder='Search For a Pokemon!' onChange={updateInput}></input>\n      </div>\n      <div className='card-container'>\n        <RenderPokemonCards pokeList={rawPokemonList} searchInput={inputString} typesToDisplay={typesToDisplay} updatePokemon={updatePokemon}/>\n      </div>\n      <div className='type-container'>\n        {pokemonTypeList.map((type) => (\n          <div className='type-button' onClick={updateTypesToDisplay}>\n            <PokemonTypeButton typeString={type} isButton={true}></PokemonTypeButton>\n          </div>\n        ))}\n        <button> Reset! </button>\n        <div>\n          {typesToDisplay.map((type) => (\n            <PokemonTypeButton typeString={type} isButton={false}></PokemonTypeButton>\n          ))}\n        </div>\n      </div>\n    </div>\n    <div className='content-container'>\n        {(pokemon.length === 0) ? (\n          <p>Pick a pokemon!</p>\n        ) : (\n          <AnimatePresence exitBeforeEnter={true}>\n            <RenderPokemonInfo pokemonToUse={pokemon} key={pokemon.name}/>\n          </AnimatePresence>\n        )}\n    </div>\n    </>\n  );\n}\n\nexport default cold(App);"]},"metadata":{},"sourceType":"module"}