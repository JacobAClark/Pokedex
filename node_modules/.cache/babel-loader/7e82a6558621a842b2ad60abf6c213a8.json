{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\PokemonInfo\\\\PokemonInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PokemonTypeButton from '../PokemonTypeButton/PokemonTypeButton.js';\nimport './PokemonInfo.css';\nimport getGradient from \"../GetGradient.js\";\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getAbilityData = async abilityName => {\n  try {\n    const res = await fetch(\"https://pokeapi.co/api/v2/ability/\" + abilityName);\n    const pokemonPromise = await res.json();\n    return pokemonPromise;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst RenderPokemonInfo = props => {\n  _s();\n\n  const [abilities, setAbilities] = useState([]);\n  const pokemon = props.pokemonToUse;\n  console.log(pokemon);\n  const pokemonCurrentTypes = [];\n  let gradientString = \"\";\n  useEffect(i => {\n    const promises = [];\n    pokemon.abilities.map(abilityData => {\n      promises.push(getAbilityData(abilityData.ability.name));\n    });\n    Promise.all(promises).then(results => {\n      setAbilities(results);\n    });\n  }, []);\n  console.log(abilities);\n  const animateFromTop = {\n    before: {\n      y: '-100vh',\n      opacity: 0\n    },\n    onScreen: {\n      y: '0',\n      opacity: 1\n    },\n    after: {\n      y: '100vh',\n      opacity: 0\n    }\n  };\n  const animateFromBottom = {\n    before: {\n      y: '100vh',\n      opacity: 0\n    },\n    onScreen: {\n      y: '0',\n      opacity: 1\n    },\n    after: {\n      y: '-100vh',\n      opacity: 0\n    }\n  };\n  pokemon.types.map(typeData => {\n    pokemonCurrentTypes.push(typeData.type.name);\n  });\n\n  if (pokemonCurrentTypes.length === 1) {\n    gradientString = getGradient({\n      typeString: pokemonCurrentTypes[0]\n    });\n  } else {\n    gradientString = getGradient({\n      typeString: pokemonCurrentTypes[0]\n    }) + ', ' + getGradient({\n      typeString: pokemonCurrentTypes[1]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      style: {\n        position: 'absolute',\n        width: '420px',\n        height: '640px',\n        left: '75%',\n        top: '30px',\n        transform: 'translateX(-50%)',\n        backgroundImage: 'linear-gradient(225deg, ' + gradientString + ')',\n        boxShadow: '0 20px 20px 0 rgba(0,0,0,0.2)',\n        borderRadius: '30px'\n      },\n      variants: animateFromTop,\n      initial: \"before\",\n      animate: \"onScreen\",\n      exit: \"after\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"poke-height-fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          style: {\n            position: 'absolute',\n            left: '10px'\n          },\n          children: [pokemon.height * 10, \" cm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"big-poke-img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + pokemon.id + '.svg',\n            className: \"big-poke-img\"\n          }, pokemon.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poke-type-container\",\n        children: pokemon.types.map(type => React.Children.toArray( /*#__PURE__*/_jsxDEV(PokemonTypeButton, {\n          typeString: type.type.name,\n          isButton: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 67\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, pokemon.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Stats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), React.Children.toArray(pokemon.stats.map(statData => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [statData.stat.name, \" - \", statData.base_stat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ability-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Abilities:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), React.Children.toArray(pokemon.abilities.map(abilityData => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [abilityData.ability.name, \" - Slot \", abilityData.slot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experience-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Exp - \", pokemon.base_experience]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weight-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weight - \", pokemon.weight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RenderPokemonInfo, \"xLmhGsNU0cjL5gTjZEb+fnzHV9Y=\");\n\n_c = RenderPokemonInfo;\nexport default RenderPokemonInfo;\n/*\r\n      <div style={{\r\n        height: '600px',\r\n        width: '420px',\r\n        background: 'linear-gradient()',\r\n      }}>\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderPokemonInfo\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/PokemonInfo/PokemonInfo.js"],"names":["React","useState","useEffect","PokemonTypeButton","getGradient","motion","getAbilityData","abilityName","res","fetch","pokemonPromise","json","e","console","log","RenderPokemonInfo","props","abilities","setAbilities","pokemon","pokemonToUse","pokemonCurrentTypes","gradientString","i","promises","map","abilityData","push","ability","name","Promise","all","then","results","animateFromTop","before","y","opacity","onScreen","after","animateFromBottom","types","typeData","type","length","typeString","position","width","height","left","top","transform","backgroundImage","boxShadow","borderRadius","id","Children","toArray","stats","statData","stat","base_stat","slot","base_experience","weight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PokemonTypeButton from '../PokemonTypeButton/PokemonTypeButton.js';\r\nimport './PokemonInfo.css'\r\nimport getGradient from \"../GetGradient.js\";\r\nimport { motion } from 'framer-motion';\r\n\r\nconst getAbilityData = async (abilityName) => {\r\n  try {\r\n    const res = await fetch(\"https://pokeapi.co/api/v2/ability/\" + abilityName);\r\n    const pokemonPromise = await res.json();\r\n    return pokemonPromise;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst RenderPokemonInfo = (props) => {\r\n    const [abilities, setAbilities] = useState([]);\r\n    const pokemon = props.pokemonToUse;\r\n    console.log(pokemon)\r\n    const pokemonCurrentTypes = [];\r\n    let gradientString = \"\";\r\n    \r\n    useEffect((i) => {\r\n      const promises = [];\r\n      pokemon.abilities.map((abilityData) => {\r\n        promises.push(getAbilityData(abilityData.ability.name));\r\n      })\r\n      Promise.all(promises).then((results)=>{\r\n        setAbilities(results);\r\n      })\r\n    }, []);\r\n\r\n    console.log(abilities)\r\n\r\n    const animateFromTop = {\r\n      before: {\r\n        y: '-100vh',\r\n        opacity: 0,\r\n      },\r\n      onScreen: {\r\n        y: '0',\r\n        opacity: 1,\r\n      },\r\n      after: {\r\n        y: '100vh',\r\n        opacity: 0,\r\n      }\r\n    }\r\n\r\n    const animateFromBottom = {\r\n      before: {\r\n        y: '100vh',\r\n        opacity: 0,\r\n      },\r\n      onScreen: {\r\n        y: '0',\r\n        opacity: 1,\r\n      },\r\n      after: {\r\n        y: '-100vh',\r\n        opacity: 0,\r\n      }\r\n    }\r\n\r\n    pokemon.types.map((typeData) => {\r\n        pokemonCurrentTypes.push(typeData.type.name);\r\n    })\r\n\r\n    if(pokemonCurrentTypes.length === 1) {\r\n      gradientString = getGradient({typeString: pokemonCurrentTypes[0]});\r\n    } else {\r\n      gradientString = getGradient({typeString: pokemonCurrentTypes[0]}) + ', ' + getGradient({typeString: pokemonCurrentTypes[1]});\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        <motion.div style={{\r\n          position: 'absolute',\r\n          width: '420px',\r\n          height: '640px',\r\n          left: '75%',\r\n          top: '30px',\r\n          transform: 'translateX(-50%)',\r\n          backgroundImage: 'linear-gradient(225deg, ' + gradientString + ')',\r\n          boxShadow: '0 20px 20px 0 rgba(0,0,0,0.2)',\r\n          borderRadius: '30px'}} key={pokemon.name} variants={animateFromTop} initial='before' animate='onScreen' exit='after'>\r\n          <fieldset className=\"poke-height-fieldset\">\r\n            <legend style={{position: 'absolute', left: '10px'}}>{pokemon.height * 10} cm</legend>\r\n            <div className='big-poke-img-container'>\r\n              <img src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + pokemon.id + '.svg'} className='big-poke-img' key={pokemon.name}></img>\r\n            </div>\r\n          </fieldset>\r\n          <div className='poke-type-container'>\r\n              {pokemon.types.map((type) => React.Children.toArray(<PokemonTypeButton typeString={type.type.name} isButton={false}/>))}\r\n          </div>\r\n        </motion.div>\r\n        <div className='stats-container'>\r\n          <p>Stats:</p>\r\n          {React.Children.toArray(pokemon.stats.map((statData) => (\r\n            <p>{statData.stat.name} - {statData.base_stat}</p>\r\n          )))}\r\n        </div>\r\n\r\n        <div className='ability-container'>\r\n          <p>Abilities:</p>\r\n          {React.Children.toArray(pokemon.abilities.map((abilityData) => (\r\n            <p>{abilityData.ability.name} - Slot {abilityData.slot}</p>\r\n          )))}\r\n        </div>\r\n\r\n        <div className='experience-container'>\r\n          <p>Base Exp - {pokemon.base_experience}</p>\r\n        </div>\r\n\r\n        <div className='weight-container'>\r\n          <p>Weight - {pokemon.weight}</p>\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default RenderPokemonInfo;\r\n\r\n\r\n/*\r\n      <div style={{\r\n        height: '600px',\r\n        width: '420px',\r\n        background: 'linear-gradient()',\r\n      }}>\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}