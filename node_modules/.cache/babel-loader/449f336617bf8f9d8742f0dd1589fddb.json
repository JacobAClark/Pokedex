{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\PokemonRender.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './PokemonRender.css';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonRender = () => {\n  _s();\n\n  const [pokemonList, setPokemonList] = useState([]);\n\n  const getPokemonData = async id => {\n    try {\n      const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\n      const pokemon = await res.json();\n      return pokemon;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(i => {\n    const promises = [];\n\n    for (let i = 1; i < 5; i++) {\n      promises.push(getPokemonData(i));\n    }\n\n    Promise.all(promises).then(results => {\n      setPokemonList(results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardContainer\",\n    children: pokemonList.map(poke => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: poke.sprites.front_default,\n        className: \"PokeImg\"\n      }, poke.sprites.front_default, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: poke.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", poke.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n/*const Pokemon = ({ id, name }) => (\r\n  <div>\r\n    <p>{id}</p>\r\n    <p>{name}</p>\r\n  </div>\r\n);\r\n\r\nconst PokemonRender = () => {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const tempPokemonArray = []\r\n  const getPokemonData = async (id) => {\r\n    try {\r\n      fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id).then(res => res.json()).then((pokemon) => tempPokemonArray.push(pokemon))\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect((i) => {\r\n    for (i = 1; i < 5; i++) {\r\n      getPokemonData(i)\r\n    }\r\n    setPokemonList(tempPokemonArray);\r\n    console.log(pokemonList);\r\n    tempPokemonArray.length = 0;\r\n    pokemonList.map((poke) => {\r\n      console.log(poke.name);\r\n      renderPokemon(poke);\r\n    })\r\n  }, []);\r\n\r\n  const renderPokemon = (poke) => {\r\n    console.log('2 - ' + poke.name);\r\n    ReactDOM.render(poke.name, document.getElementById('root'));\r\n  }\r\n\r\n  return (\r\n    <>\r\n    </>\r\n  )\r\n    <img src={pokemonList.slice(0,0)}></img>\r\n    <>\r\n    <table>\r\n      <tbody>\r\n        {pokemonList.map(poke=>(\r\n          console.log(poke.name),\r\n          <tr key={poke.id}>\r\n            <td key={1}>{poke.id} Test</td>\r\n            <td key={2}>{poke.name} Test 2</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </>\r\n  )\r\n\r\n//  return pokemonList.map((pokemon) => <Pokemon id={pokemon.id} name={pokemon.name}/>);\r\n};*/\n\n\n_s(PokemonRender, \"8WCeILIBbUks4eWUNugK57Uz8MA=\");\n\n_c = PokemonRender;\nexport default PokemonRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonRender\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/PokemonRender.js"],"names":["React","useEffect","useState","ReactDOM","PokemonRender","pokemonList","setPokemonList","getPokemonData","id","res","fetch","pokemon","json","e","console","log","i","promises","push","Promise","all","then","results","map","poke","sprites","front_default","name","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMK,cAAc,GAAG,MAAOC,EAAP,IAAc;AACnC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuCF,EAAxC,CAAvB;AACA,YAAMG,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AACA,aAAOD,OAAP;AACD,KAJD,CAIE,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GARD;;AAUAZ,EAAAA,SAAS,CAAEe,CAAD,IAAO;AACf,UAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BC,MAAAA,QAAQ,CAACC,IAAT,CAAeX,cAAc,CAACS,CAAD,CAA7B;AACD;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBI,IAAtB,CAA4BC,OAAD,IAAW;AACpChB,MAAAA,cAAc,CAACgB,OAAD,CAAd;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGjB,WAAW,CAACkB,GAAZ,CAAgBC,IAAI,iBACnB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,OAAL,CAAaC,aAAvB;AAAsC,QAAA,SAAS,EAAC;AAAhD,SAA+DF,IAAI,CAACC,OAAL,CAAaC,aAA5E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,+BAAUH,IAAI,CAACI,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnCD;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA9FMxB,a;;KAAAA,a;AAgGN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './PokemonRender.css'\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nconst PokemonRender = () => {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const getPokemonData = async (id) => {\r\n    try {\r\n      const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\r\n      const pokemon = await res.json();\r\n      return pokemon;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect((i) => {\r\n    const promises = [];\r\n    for (let i = 1; i < 5; i++) {\r\n      promises.push( getPokemonData(i) )\r\n    }\r\n    Promise.all(promises).then((results)=>{\r\n      setPokemonList(results);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div className='cardContainer'>\r\n      {pokemonList.map(poke=>(\r\n        <div className='card'>\r\n          <img src={poke.sprites.front_default} className='PokeImg' key={poke.sprites.front_default}/>\r\n          <div className='container'>\r\n            <p>{poke.name}</p>\r\n            <p>Type: {poke.type}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n/*const Pokemon = ({ id, name }) => (\r\n  <div>\r\n    <p>{id}</p>\r\n    <p>{name}</p>\r\n  </div>\r\n);\r\n\r\nconst PokemonRender = () => {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const tempPokemonArray = []\r\n  const getPokemonData = async (id) => {\r\n    try {\r\n      fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id).then(res => res.json()).then((pokemon) => tempPokemonArray.push(pokemon))\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect((i) => {\r\n    for (i = 1; i < 5; i++) {\r\n      getPokemonData(i)\r\n    }\r\n    setPokemonList(tempPokemonArray);\r\n    console.log(pokemonList);\r\n    tempPokemonArray.length = 0;\r\n    pokemonList.map((poke) => {\r\n      console.log(poke.name);\r\n      renderPokemon(poke);\r\n    })\r\n  }, []);\r\n\r\n  const renderPokemon = (poke) => {\r\n    console.log('2 - ' + poke.name);\r\n    ReactDOM.render(poke.name, document.getElementById('root'));\r\n  }\r\n\r\n  return (\r\n    <>\r\n    </>\r\n  )\r\n    <img src={pokemonList.slice(0,0)}></img>\r\n    <>\r\n    <table>\r\n      <tbody>\r\n        {pokemonList.map(poke=>(\r\n          console.log(poke.name),\r\n          <tr key={poke.id}>\r\n            <td key={1}>{poke.id} Test</td>\r\n            <td key={2}>{poke.name} Test 2</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </>\r\n  )\r\n\r\n//  return pokemonList.map((pokemon) => <Pokemon id={pokemon.id} name={pokemon.name}/>);\r\n};*/\r\n\r\nexport default PokemonRender;"]},"metadata":{},"sourceType":"module"}