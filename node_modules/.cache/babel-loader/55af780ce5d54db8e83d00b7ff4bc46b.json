{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { cold } from 'react-hot-loader';\nimport { AnimatePresence } from 'framer-motion';\nimport './App.css';\nimport RenderPokemonCards from './RenderPokemon/RenderPokemon.js';\nimport PokemonTypeButton from './PokemonTypeButton/PokemonTypeButton.js';\nimport RenderPokemonInfo from './PokemonInfo/InfoContainer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getPokemonData = async id => {\n  try {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\n    const pokemonPromise = await res.json();\n    return pokemonPromise;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [inputString, setInputString] = useState(\"\");\n  const [rawPokemonList, setRawPokemonList] = useState([]);\n  const [pokemonToRender, setPokemonToRender] = useState([]);\n  const [pokemon, setPokemon] = useState([]);\n  const pokemonTypeList = ['grass', 'poison', 'fire', 'flying', 'water', 'bug', 'normal', 'electric', 'ground', 'fairy', 'fighting', 'psychic', 'rock', 'steel', 'ice', 'ghost', 'dragon'];\n  const [typesToDisplay, setTypesToDisplay] = useState([]);\n\n  const deselectPokemon = () => {\n    setPokemon([]);\n  };\n\n  useEffect(i => {\n    const promises = [];\n\n    for (let i = 1; i < 152; i++) {\n      promises.push(getPokemonData(i));\n    }\n\n    Promise.all(promises).then(results => {\n      setRawPokemonList(results);\n    });\n  }, []);\n\n  const updateInput = e => {\n    const lowerString = e.target.value.toLowerCase();\n    setInputString(lowerString);\n  };\n\n  const updatePokemon = pokeToChangeTo => {\n    setPokemon(pokeToChangeTo);\n  };\n\n  const resetTypesToDisplay = e => {};\n\n  const updateTypesToDisplay = e => {\n    if (typesToDisplay.length === 0) {\n      const newTypesList = [e.target.value];\n      setTypesToDisplay(newTypesList);\n    } else {\n      if (typesToDisplay.includes(e.target.value)) {\n        const newTypesList = typesToDisplay.filter(type => type !== e.target.value);\n        setTypesToDisplay(newTypesList);\n      } else {\n        const newTypesList = [e.target.value];\n        setTypesToDisplay(typesToDisplay.concat(newTypesList));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn-icons.flaticon.com/png/512/868/premium/868596.png?token=exp=1647880908~hmac=5e802c3c8b8423596716ca9353212d17\",\n          className: \"poke-ball-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search For a Pokemon!\",\n          onChange: updateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(RenderPokemonCards, {\n          pokeList: rawPokemonList,\n          searchInput: inputString,\n          typesToDisplay: typesToDisplay,\n          updatePokemon: updatePokemon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-container\",\n        children: [pokemonTypeList.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-button\",\n          onClick: updateTypesToDisplay,\n          children: /*#__PURE__*/_jsxDEV(PokemonTypeButton, {\n            typeString: type,\n            isButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Selected: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-types-container\",\n        children: typesToDisplay.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-type\",\n          children: /*#__PURE__*/_jsxDEV(PokemonTypeButton, {\n            typeString: type,\n            isButton: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: pokemon.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pick a pokemon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        exitBeforeEnter: true,\n        children: /*#__PURE__*/_jsxDEV(RenderPokemonInfo, {\n          pokemonToUse: pokemon\n        }, pokemon.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"OzL0ntaSqXpLgTiyKOFyUEfCQEU=\");\n\n_c = App;\nexport default _c2 = cold(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/App.js"],"names":["React","useState","useEffect","cold","AnimatePresence","RenderPokemonCards","PokemonTypeButton","RenderPokemonInfo","getPokemonData","id","res","fetch","pokemonPromise","json","e","console","log","App","inputString","setInputString","rawPokemonList","setRawPokemonList","pokemonToRender","setPokemonToRender","pokemon","setPokemon","pokemonTypeList","typesToDisplay","setTypesToDisplay","deselectPokemon","i","promises","push","Promise","all","then","results","updateInput","lowerString","target","value","toLowerCase","updatePokemon","pokeToChangeTo","resetTypesToDisplay","updateTypesToDisplay","length","newTypesList","includes","filter","type","concat","textAlign","map","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { cold } from 'react-hot-loader';\nimport { AnimatePresence } from 'framer-motion';\nimport './App.css';\nimport RenderPokemonCards from './RenderPokemon/RenderPokemon.js';\nimport PokemonTypeButton from './PokemonTypeButton/PokemonTypeButton.js';\nimport RenderPokemonInfo from './PokemonInfo/InfoContainer.js'\n\n\nconst getPokemonData = async (id) => {\n  try {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\n    const pokemonPromise = await res.json();\n    return pokemonPromise;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst App = () => {\n  const [inputString, setInputString] = useState(\"\");\n  const [rawPokemonList, setRawPokemonList] = useState([]);\n  const [pokemonToRender, setPokemonToRender] = useState([]);\n  const [pokemon, setPokemon] = useState([]);\n  const pokemonTypeList = ['grass', 'poison', 'fire', 'flying', 'water', 'bug', 'normal', 'electric', 'ground', 'fairy', 'fighting', 'psychic', 'rock', 'steel', 'ice', 'ghost', 'dragon'];\n  const [typesToDisplay, setTypesToDisplay] = useState([]);\n\n\n  const deselectPokemon = () => {\n    setPokemon([]);\n  }\n\n  useEffect((i) => {\n    const promises = [];\n    for (let i = 1; i < 152; i++) {\n      promises.push(getPokemonData(i));\n    }\n    Promise.all(promises).then((results)=>{\n      setRawPokemonList(results);\n    })\n  }, []);\n\n  const updateInput = (e) => {\n    const lowerString = e.target.value.toLowerCase();\n    setInputString(lowerString);\n  }\n\n  const updatePokemon = (pokeToChangeTo) => {\n    setPokemon(pokeToChangeTo);\n  }\n\n  const resetTypesToDisplay = (e) => {\n\n  }\n\n  const updateTypesToDisplay = (e) => {\n    if(typesToDisplay.length === 0) {\n      const newTypesList = [e.target.value];\n      setTypesToDisplay(newTypesList);\n    } else {\n      if(typesToDisplay.includes(e.target.value)) {\n        const newTypesList = typesToDisplay.filter((type) => type !== e.target.value);\n        setTypesToDisplay(newTypesList);\n      } else {\n        const newTypesList = [e.target.value];\n        setTypesToDisplay(typesToDisplay.concat(newTypesList));\n      }\n    }\n  }\n\n  return (\n    <>\n    <div className='sidebar-container'>\n      <div className='search-bar-container'>\n        <img src='https://cdn-icons.flaticon.com/png/512/868/premium/868596.png?token=exp=1647880908~hmac=5e802c3c8b8423596716ca9353212d17' className='poke-ball-img' />\n        <input type='text' placeholder='Search For a Pokemon!' onChange={updateInput}></input>\n      </div>\n      <div className='card-container'>\n        <RenderPokemonCards pokeList={rawPokemonList} searchInput={inputString} typesToDisplay={typesToDisplay} updatePokemon={updatePokemon}/>\n      </div>\n      <p style={{textAlign: 'center'}}>Test</p>\n      <div className='type-container'>\n        {pokemonTypeList.map((type) => (\n          <div className='type-button' onClick={updateTypesToDisplay}>\n            <PokemonTypeButton typeString={type} isButton={true}></PokemonTypeButton>\n          </div>\n        ))}\n        <h1> Selected: </h1>\n      </div>\n      <div className='selected-types-container'>\n          {typesToDisplay.map((type) => (\n            <div className='selected-type'>\n              <PokemonTypeButton typeString={type} isButton={false}></PokemonTypeButton>\n            </div>\n          ))}\n        </div>\n    </div>\n    <div className='content-container'>\n        {(pokemon.length === 0) ? (\n          <p>Pick a pokemon!</p>\n        ) : (\n          <AnimatePresence exitBeforeEnter={true}>\n            <RenderPokemonInfo pokemonToUse={pokemon} key={pokemon.name}/>\n          </AnimatePresence>\n        )}\n    </div>\n    </>\n  );\n}\n\nexport default cold(App);"]},"metadata":{},"sourceType":"module"}