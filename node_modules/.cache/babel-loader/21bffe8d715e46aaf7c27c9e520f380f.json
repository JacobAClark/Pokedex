{"ast":null,"code":"import PokeColour from \"./TypeEnum.ts\";\n\nconst getGradient = props => {\n  console.log(props.typeString);\n  const typeColour = PokeColour[props.typeString];\n  const colourRGB = [typeColour.slice(1, 3), typeColour.slice(3, 5), typeColour.slice(5, 7)];\n  const lighterColour = colourRGB.map(colour => Math.round(parseInt(colour, 16) * 1.4)).join();\n  const darkerColour = colourRGB.map(colour => Math.round(parseInt(colour, 16) * 0.6)).join();\n  const gradientString = 'rgb(' + lighterColour + ')' + ', rgb(' + darkerColour + ')';\n  return gradientString;\n};\n\nexport default getGradient;","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/GetGradient.js"],"names":["PokeColour","getGradient","props","console","log","typeString","typeColour","colourRGB","slice","lighterColour","map","colour","Math","round","parseInt","join","darkerColour","gradientString"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA,QAAMC,UAAU,GAAGN,UAAU,CAACE,KAAK,CAACG,UAAP,CAA7B;AACA,QAAME,SAAS,GAAG,CAACD,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAD,EAAyBF,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAzB,EAAiDF,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAjD,CAAlB;AACA,QAAMC,aAAa,GAAGF,SAAS,CAACG,GAAV,CAAcC,MAAM,IAAKC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACH,MAAD,EAAS,EAAT,CAAR,GAAuB,GAAlC,CAAzB,EAAkEI,IAAlE,EAAtB;AACA,QAAMC,YAAY,GAAGT,SAAS,CAACG,GAAV,CAAcC,MAAM,IAAKC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACH,MAAD,EAAS,EAAT,CAAR,GAAuB,GAAlC,CAAzB,EAAkEI,IAAlE,EAArB;AAEA,QAAME,cAAc,GAAG,SAASR,aAAT,GAAyB,GAAzB,GAA+B,QAA/B,GAA0CO,YAA1C,GAAyD,GAAhF;AACA,SAAOC,cAAP;AACH,CATD;;AAWA,eAAehB,WAAf","sourcesContent":["import PokeColour from \"./TypeEnum.ts\";\r\n\r\n\r\nconst getGradient = (props) => {\r\n    console.log(props.typeString)\r\n    const typeColour = PokeColour[props.typeString];\r\n    const colourRGB = [typeColour.slice(1, 3), typeColour.slice(3, 5), typeColour.slice(5, 7)];\r\n    const lighterColour = colourRGB.map(colour => (Math.round(parseInt(colour, 16) * 1.4))).join();\r\n    const darkerColour = colourRGB.map(colour => (Math.round(parseInt(colour, 16) * 0.6))).join();\r\n\r\n    const gradientString = 'rgb(' + lighterColour + ')' + ', rgb(' + darkerColour + ')';\r\n    return gradientString;\r\n}\r\n\r\nexport default getGradient;"]},"metadata":{},"sourceType":"module"}