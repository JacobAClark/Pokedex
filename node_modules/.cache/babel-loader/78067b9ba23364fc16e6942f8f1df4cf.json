{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { cold } from 'react-hot-loader';\nimport { AnimatePresence } from 'framer-motion';\nimport './App.css';\nimport RenderPokemonCards from './RenderPokemon/RenderPokemon.js';\nimport PokemonTypeButton from './PokemonTypeButton/PokemonTypeButton.js';\nimport RenderPokemonInfo from './PokemonInfo/InfoContainer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getPokemonData = async id => {\n  try {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\n    const pokemonPromise = await res.json();\n    return pokemonPromise;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [inputString, setInputString] = useState(\"\");\n  const [rawPokemonList, setRawPokemonList] = useState([]);\n  const [pokemonToRender, setPokemonToRender] = useState([]);\n  const [pokemon, setPokemon] = useState([]);\n  const pokemonTypeList = ['grass', 'poison', 'fire', 'flying', 'water', 'bug', 'normal', 'electric', 'ground', 'fairy', 'fighting', 'psychic', 'rock', 'steel', 'ice', 'ghost', 'dragon'];\n  const [typesToDisplay, setTypesToDisplay] = useState([]);\n  useEffect(i => {\n    const promises = [];\n\n    for (let i = 1; i < 152; i++) {\n      promises.push(getPokemonData(i));\n    }\n\n    Promise.all(promises).then(results => {\n      setRawPokemonList(results);\n    });\n  }, []);\n\n  const updateInput = e => {\n    const lowerString = e.target.value.toLowerCase();\n    setInputString(lowerString);\n  };\n\n  const updatePokemon = pokeToChangeTo => {\n    setPokemon(pokeToChangeTo);\n  };\n\n  const updateTypesToDisplay = e => {\n    if (typesToDisplay.length === 0) {\n      const newTypesList = [e.target.value];\n      setTypesToDisplay(newTypesList);\n    } else {\n      if (typesToDisplay.includes(e.target.value)) {\n        const newTypesList = typesToDisplay.filter(type => type !== e.target.value);\n        setTypesToDisplay(newTypesList);\n      } else {\n        const newTypesList = [e.target.value];\n        setTypesToDisplay(typesToDisplay.concat(newTypesList));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn-icons.flaticon.com/png/512/868/premium/868596.png?token=exp=1647880908~hmac=5e802c3c8b8423596716ca9353212d17\",\n          className: \"poke-ball-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search For a Pokemon!\",\n          onChange: updateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(RenderPokemonCards, {\n          pokeList: rawPokemonList,\n          searchInput: inputString,\n          typesToDisplay: typesToDisplay,\n          updatePokemon: updatePokemon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center',\n          margin: '0px'\n        },\n        children: \"Filter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-container\",\n        children: React.Children.toArray(pokemonTypeList.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-button\",\n          onClick: updateTypesToDisplay,\n          children: /*#__PURE__*/_jsxDEV(PokemonTypeButton, {\n            typeString: type,\n            isButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: pokemon.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pick a pokemon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        exitBeforeEnter: true,\n        children: /*#__PURE__*/_jsxDEV(RenderPokemonInfo, {\n          pokemonToUse: pokemon\n        }, pokemon.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"OzL0ntaSqXpLgTiyKOFyUEfCQEU=\");\n\n_c = App;\nexport default _c2 = cold(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/App.js"],"names":["React","useState","useEffect","cold","AnimatePresence","RenderPokemonCards","PokemonTypeButton","RenderPokemonInfo","getPokemonData","id","res","fetch","pokemonPromise","json","e","console","log","App","inputString","setInputString","rawPokemonList","setRawPokemonList","pokemonToRender","setPokemonToRender","pokemon","setPokemon","pokemonTypeList","typesToDisplay","setTypesToDisplay","i","promises","push","Promise","all","then","results","updateInput","lowerString","target","value","toLowerCase","updatePokemon","pokeToChangeTo","updateTypesToDisplay","length","newTypesList","includes","filter","type","concat","textAlign","margin","Children","toArray","map","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { cold } from 'react-hot-loader';\nimport { AnimatePresence } from 'framer-motion';\nimport './App.css';\nimport RenderPokemonCards from './RenderPokemon/RenderPokemon.js';\nimport PokemonTypeButton from './PokemonTypeButton/PokemonTypeButton.js';\nimport RenderPokemonInfo from './PokemonInfo/InfoContainer.js'\n\n\nconst getPokemonData = async (id) => {\n    try {\n        const res = await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id);\n        const pokemonPromise = await res.json();\n        return pokemonPromise;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nconst App = () => {\n    const [inputString, setInputString] = useState(\"\");\n    const [rawPokemonList, setRawPokemonList] = useState([]);\n    const [pokemonToRender, setPokemonToRender] = useState([]);\n    const [pokemon, setPokemon] = useState([]);\n    const pokemonTypeList = ['grass', 'poison', 'fire', 'flying', 'water', 'bug', 'normal', 'electric', 'ground', 'fairy', 'fighting', 'psychic', 'rock', 'steel', 'ice', 'ghost', 'dragon'];\n    const [typesToDisplay, setTypesToDisplay] = useState([]);\n\n    useEffect((i) => {\n        const promises = [];\n        for (let i = 1; i < 152; i++) {\n            promises.push(getPokemonData(i));\n        }\n        Promise.all(promises).then((results)=>{\n            setRawPokemonList(results);\n        })\n    }, []);\n\n    const updateInput = (e) => {\n        const lowerString = e.target.value.toLowerCase();\n        setInputString(lowerString);\n    }\n\n    const updatePokemon = (pokeToChangeTo) => {\n        setPokemon(pokeToChangeTo);\n    }\n\n    const updateTypesToDisplay = (e) => {\n        if(typesToDisplay.length === 0) {\n            const newTypesList = [e.target.value];\n            setTypesToDisplay(newTypesList);\n        } else {\n            if(typesToDisplay.includes(e.target.value)) {\n                const newTypesList = typesToDisplay.filter((type) => type !== e.target.value);\n                setTypesToDisplay(newTypesList);\n            } else {\n                const newTypesList = [e.target.value];\n                setTypesToDisplay(typesToDisplay.concat(newTypesList));\n            }\n        }\n    }\n\n    return (\n      <>\n        <div className='sidebar-container'>\n          <div className='search-bar-container'>\n            <img src='https://cdn-icons.flaticon.com/png/512/868/premium/868596.png?token=exp=1647880908~hmac=5e802c3c8b8423596716ca9353212d17' className='poke-ball-img' />\n            <input type='text' placeholder='Search For a Pokemon!' onChange={updateInput}></input>\n          </div>\n          <div className='card-container'>\n            <RenderPokemonCards pokeList={rawPokemonList} searchInput={inputString} typesToDisplay={typesToDisplay} updatePokemon={updatePokemon}/>\n          </div>\n          <h1 style={{textAlign: 'center', margin: '0px'}}>Filter:</h1>\n          <div className='type-container'>\n            {React.Children.toArray(pokemonTypeList.map((type) => (\n              <div className='type-button' onClick={updateTypesToDisplay}>\n                <PokemonTypeButton typeString={type} isButton={true}></PokemonTypeButton>\n              </div>\n            )))}\n          </div>\n        </div>\n        <div className='content-container'>\n          {(pokemon.length === 0) ? (\n            <p>Pick a pokemon!</p>\n          ) : (\n            <AnimatePresence exitBeforeEnter={true}>\n              <RenderPokemonInfo pokemonToUse={pokemon} key={pokemon.name}/>\n            </AnimatePresence>\n          )}\n        </div>\n      </>\n    );\n}\n\nexport default cold(App);"]},"metadata":{},"sourceType":"module"}