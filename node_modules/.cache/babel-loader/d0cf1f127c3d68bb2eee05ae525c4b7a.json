{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\PokemonRender.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = _ref => {\n  let {\n    id,\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Pokemon;\n\nconst PokemonRender = () => {\n  _s();\n\n  const [pokemonList, setPokemonList] = useState([]);\n  const tempPokemonArray = [];\n\n  const getPokemonData = async id => {\n    try {\n      fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id).then(res => res.json()).then(pokemon => tempPokemonArray.push(pokemon));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(i => {\n    for (i = 1; i < 5; i++) {\n      getPokemonData(i);\n    }\n\n    setPokemonList(tempPokemonArray);\n    tempPokemonArray.length = 0;\n    console.log(pokemonList);\n  }, []);\n  return pokemonList.map(pokemon => /*#__PURE__*/_jsxDEV(Pokemon, {\n    id: pokemon.id,\n    name: pokemon.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 39\n  }, this));\n};\n\n_s(PokemonRender, \"8WCeILIBbUks4eWUNugK57Uz8MA=\");\n\n_c2 = PokemonRender;\nexport default PokemonRender;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pokemon\");\n$RefreshReg$(_c2, \"PokemonRender\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/PokemonRender.js"],"names":["React","useEffect","useState","Pokemon","id","name","PokemonRender","pokemonList","setPokemonList","tempPokemonArray","getPokemonData","fetch","then","res","json","pokemon","push","e","console","log","i","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAO,GAAG;AAAA,MAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD;AAAA,sBACd;AAAA,4BACE;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADc;AAAA,CAAhB;;KAAMF,O;;AAON,MAAMG,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMO,gBAAgB,GAAG,EAAzB;;AACA,QAAMC,cAAc,GAAG,MAAON,EAAP,IAAc;AACnC,QAAI;AACFO,MAAAA,KAAK,CAAC,uCAAuCP,EAAxC,CAAL,CAAiDQ,IAAjD,CAAsDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA7D,EAAyEF,IAAzE,CAA+EG,OAAD,IAAaN,gBAAgB,CAACO,IAAjB,CAAsBD,OAAtB,CAA3F;AACD,KAFD,CAEE,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAND;;AAQAhB,EAAAA,SAAS,CAAEmB,CAAD,IAAO;AACf,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtBV,MAAAA,cAAc,CAACU,CAAD,CAAd;AACD;;AACDZ,IAAAA,cAAc,CAACC,gBAAD,CAAd;AACAA,IAAAA,gBAAgB,CAACY,MAAjB,GAA0B,CAA1B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOA,WAAW,CAACe,GAAZ,CAAiBP,OAAD,iBAAa,QAAC,OAAD;AAAS,IAAA,EAAE,EAAEA,OAAO,CAACX,EAArB;AAAyB,IAAA,IAAI,EAAEW,OAAO,CAACV;AAAvC;AAAA;AAAA;AAAA;AAAA,UAA7B,CAAP;AACD,CArBD;;GAAMC,a;;MAAAA,a;AAuBN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Pokemon = ({ id, name }) => (\r\n  <div>\r\n    <p>{id}</p>\r\n    <p>{name}</p>\r\n  </div>\r\n);\r\n\r\nconst PokemonRender = () => {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const tempPokemonArray = []\r\n  const getPokemonData = async (id) => {\r\n    try {\r\n      fetch(\"https://pokeapi.co/api/v2/pokemon/\" + id).then(res => res.json()).then((pokemon) => tempPokemonArray.push(pokemon))\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect((i) => {\r\n    for (i = 1; i < 5; i++) {\r\n      getPokemonData(i)\r\n    }\r\n    setPokemonList(tempPokemonArray);\r\n    tempPokemonArray.length = 0;\r\n    console.log(pokemonList)\r\n  }, []);\r\n\r\n  return pokemonList.map((pokemon) => <Pokemon id={pokemon.id} name={pokemon.name}/>);\r\n};\r\n\r\nexport default PokemonRender;"]},"metadata":{},"sourceType":"module"}