{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\PokemonInfo\\\\PokemonInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PokemonTypeButton from '../PokemonTypeButton/PokemonTypeButton.js';\nimport RenderPokemonAbilityButton from \"../PokemonAbilities/PokemonAbilities.js\";\nimport RenderPokemonAbilityBox from \"../PokemonAbilities/PokemonAbilityBox.js\";\nimport './PokemonInfo.css';\nimport getGradient from \"../GetGradient.js\";\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getAbilityData = async abilityName => {\n  try {\n    const res = await fetch(\"https://pokeapi.co/api/v2/ability/\" + abilityName);\n    const pokemonPromise = await res.json();\n    return pokemonPromise;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst getSpeciesData = async pokeId => {\n  try {\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon-species/\" + pokeId);\n    const speciesPromise = await res.json();\n    return speciesPromise;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst getGrowthDataPromise = async url => {\n  try {\n    const res = await fetch(url);\n    const growthPromise = await res.json();\n    return growthPromise;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst RenderPokemonInfo = props => {\n  _s();\n\n  const [abilities, setAbilities] = useState([]);\n  const [abilityToDisplay, setAbilityToDisplay] = useState([]);\n  const [growthData, setGrowthData] = useState([]);\n  const [speciesData, setSpeciesData] = useState([]);\n  const pokemon = props.pokemonToUse;\n  const pokemonCurrentTypes = [];\n  let gradientString = \"\";\n  useEffect(() => {\n    const abilityPromises = [];\n    pokemon.abilities.map(abilityData => {\n      abilityPromises.push(getAbilityData(abilityData.ability.name));\n    });\n    Promise.all(abilityPromises).then(results => {\n      setAbilities(results);\n    });\n    const speciesPromises = [];\n    speciesPromises.push(getSpeciesData(pokemon.id));\n    Promise.all(speciesPromises).then(results => {\n      setSpeciesData(results[0], () => console.log(\"Test\"));\n    });\n  }, []);\n\n  const getGrowthData = url => {\n    const growthPromises = [];\n    let growthData = [];\n    Promise.all(growthPromises).then(results => {\n      growthData = results;\n    });\n  };\n\n  const updateAbilityToDisplay = ability => {\n    if (abilityToDisplay === ability) {\n      setAbilityToDisplay([]);\n    } else {\n      setAbilityToDisplay(ability);\n    }\n  };\n\n  const animateFromTop = {\n    before: {\n      y: '-100vh',\n      opacity: 0\n    },\n    onScreen: {\n      y: '0',\n      opacity: 1\n    },\n    after: {\n      y: '100vh',\n      opacity: 0\n    }\n  };\n  pokemon.types.map(typeData => {\n    pokemonCurrentTypes.push(typeData.type.name);\n  });\n\n  if (pokemonCurrentTypes.length === 1) {\n    gradientString = getGradient({\n      typeString: pokemonCurrentTypes[0]\n    });\n  } else {\n    gradientString = getGradient({\n      typeString: pokemonCurrentTypes[0]\n    }) + ', ' + getGradient({\n      typeString: pokemonCurrentTypes[1]\n    });\n  }\n\n  console.log(growthData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      style: {\n        position: 'absolute',\n        width: '420px',\n        height: '640px',\n        left: '75%',\n        top: '30px',\n        transform: 'translateX(-50%)',\n        backgroundImage: 'linear-gradient(225deg, ' + gradientString + ')',\n        boxShadow: '0 20px 20px 0 rgba(0,0,0,0.2)',\n        borderRadius: '30px'\n      },\n      variants: animateFromTop,\n      initial: \"before\",\n      animate: \"onScreen\",\n      exit: \"after\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"poke-height-fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          style: {\n            position: 'absolute',\n            left: '10px'\n          },\n          children: [pokemon.height * 10, \" cm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"big-poke-img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + pokemon.id + '.svg',\n            className: \"big-poke-img\"\n          }, pokemon.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poke-type-container\",\n        children: pokemon.types.map(type => React.Children.toArray( /*#__PURE__*/_jsxDEV(PokemonTypeButton, {\n          typeString: type.type.name,\n          isButton: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 67\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ability-text\",\n        children: \" Abilities: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ability-container\",\n        children: React.Children.toArray(abilities.map(abilityData => /*#__PURE__*/_jsxDEV(RenderPokemonAbilityButton, {\n          abilityData: abilityData,\n          updateAbilityToDisplay: updateAbilityToDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        exitBeforeEnter: true,\n        children: abilityToDisplay.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(RenderPokemonAbilityBox, {\n          ability: abilityToDisplay\n        }, abilityToDisplay, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, pokemon.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"stats-container\",\n      variants: animateFromTop,\n      initial: \"before\",\n      animate: \"onScreen\",\n      exit: \"before\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Base Stats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), React.Children.toArray(pokemon.stats.map(statData => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [statData.stat.name.replace('-', ' '), \" - \", statData.base_stat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this))), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Exp - \", pokemon.base_experience]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), speciesData.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"basic-info-container\",\n      variants: animateFromTop,\n      initial: \"before\",\n      animate: \"onScreen\",\n      exit: \"before\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weight - \", pokemon.weight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Base Happiness - \", speciesData.base_happiness]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capture Rate - \", speciesData.capture_rate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), console.log(speciesData), speciesData.genera.map(genusData => genusData.language.name === \"en\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genus - \", genusData.genus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Habitat - \", speciesData.habitat.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Egg Groups: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), speciesData.egg_groups.map(eggGroupData => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: eggGroupData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RenderPokemonInfo, \"62cvdkZQS2QZ5vbLwy+AuVKYk78=\");\n\n_c = RenderPokemonInfo;\nexport default RenderPokemonInfo;\n/*\r\n      <div style={{\r\n        height: '600px',\r\n        width: '420px',\r\n        background: 'linear-gradient()',\r\n      }}>\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderPokemonInfo\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/PokemonInfo/PokemonInfo.js"],"names":["React","useState","useEffect","PokemonTypeButton","RenderPokemonAbilityButton","RenderPokemonAbilityBox","getGradient","AnimatePresence","motion","getAbilityData","abilityName","res","fetch","pokemonPromise","json","e","console","log","getSpeciesData","pokeId","speciesPromise","getGrowthDataPromise","url","growthPromise","RenderPokemonInfo","props","abilities","setAbilities","abilityToDisplay","setAbilityToDisplay","growthData","setGrowthData","speciesData","setSpeciesData","pokemon","pokemonToUse","pokemonCurrentTypes","gradientString","abilityPromises","map","abilityData","push","ability","name","Promise","all","then","results","speciesPromises","id","getGrowthData","growthPromises","updateAbilityToDisplay","animateFromTop","before","y","opacity","onScreen","after","types","typeData","type","length","typeString","position","width","height","left","top","transform","backgroundImage","boxShadow","borderRadius","Children","toArray","stats","statData","stat","replace","base_stat","base_experience","weight","base_happiness","capture_rate","genera","genusData","language","genus","habitat","egg_groups","eggGroupData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PokemonTypeButton from '../PokemonTypeButton/PokemonTypeButton.js';\r\nimport RenderPokemonAbilityButton from \"../PokemonAbilities/PokemonAbilities.js\";\r\nimport RenderPokemonAbilityBox from \"../PokemonAbilities/PokemonAbilityBox.js\";\r\nimport './PokemonInfo.css'\r\nimport getGradient from \"../GetGradient.js\";\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\n\r\nconst getAbilityData = async (abilityName) => {\r\n  try {\r\n    const res = await fetch(\"https://pokeapi.co/api/v2/ability/\" + abilityName);\r\n    const pokemonPromise = await res.json();\r\n    return pokemonPromise;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getSpeciesData = async (pokeId) => {\r\n  try {\r\n    const res = await fetch(\"https://pokeapi.co/api/v2/pokemon-species/\" + pokeId);\r\n    const speciesPromise = await res.json();\r\n    return speciesPromise;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getGrowthDataPromise = async (url) => {\r\n  try {\r\n    const res = await fetch(url);\r\n    const growthPromise = await res.json();\r\n    return growthPromise;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\r\nconst RenderPokemonInfo = (props) => {\r\n    const [abilities, setAbilities] = useState([]);\r\n    const [abilityToDisplay, setAbilityToDisplay] = useState([]);\r\n    const [growthData, setGrowthData] = useState([]);\r\n    const [speciesData, setSpeciesData] = useState([]);\r\n    const pokemon = props.pokemonToUse;\r\n    const pokemonCurrentTypes = [];\r\n    let gradientString = \"\";\r\n    \r\n    useEffect(() => {\r\n      const abilityPromises = [];\r\n      pokemon.abilities.map((abilityData) => {\r\n        abilityPromises.push(getAbilityData(abilityData.ability.name));\r\n      })\r\n      Promise.all(abilityPromises).then((results)=>{\r\n        setAbilities(results);\r\n      })\r\n      const speciesPromises = [];\r\n      speciesPromises.push(getSpeciesData(pokemon.id));\r\n      Promise.all(speciesPromises).then((results) => {\r\n        setSpeciesData(results[0], () => console.log(\"Test\"))\r\n      })\r\n    }, []);\r\n\r\n    const getGrowthData = (url) => {\r\n      const growthPromises = [];\r\n      let growthData = [];\r\n\r\n      Promise.all(growthPromises).then((results)=>{\r\n        growthData = results;\r\n      })\r\n    }\r\n\r\n    const updateAbilityToDisplay = (ability) => {\r\n      if(abilityToDisplay === ability) {\r\n        setAbilityToDisplay([]);\r\n      } else {\r\n        setAbilityToDisplay(ability);\r\n      }\r\n    }\r\n\r\n    const animateFromTop = {\r\n      before: {\r\n        y: '-100vh',\r\n        opacity: 0,\r\n      },\r\n      onScreen: {\r\n        y: '0',\r\n        opacity: 1,\r\n      },\r\n      after: {\r\n        y: '100vh',\r\n        opacity: 0,\r\n      }\r\n    }\r\n\r\n    pokemon.types.map((typeData) => {\r\n        pokemonCurrentTypes.push(typeData.type.name);\r\n    })\r\n\r\n    if(pokemonCurrentTypes.length === 1) {\r\n      gradientString = getGradient({typeString: pokemonCurrentTypes[0]});\r\n    } else {\r\n      gradientString = getGradient({typeString: pokemonCurrentTypes[0]}) + ', ' + getGradient({typeString: pokemonCurrentTypes[1]});\r\n    }\r\n    console.log(growthData)\r\n    return (\r\n      <>\r\n        <motion.div style={{\r\n          position: 'absolute',\r\n          width: '420px',\r\n          height: '640px',\r\n          left: '75%',\r\n          top: '30px',\r\n          transform: 'translateX(-50%)',\r\n          backgroundImage: 'linear-gradient(225deg, ' + gradientString + ')',\r\n          boxShadow: '0 20px 20px 0 rgba(0,0,0,0.2)',\r\n          borderRadius: '30px'}} key={pokemon.name} variants={animateFromTop} initial='before' animate='onScreen' exit='after'>\r\n          <fieldset className=\"poke-height-fieldset\">\r\n            <legend style={{position: 'absolute', left: '10px'}}>{pokemon.height * 10} cm</legend>\r\n            <div className='big-poke-img-container'>\r\n              <img src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + pokemon.id + '.svg'} className='big-poke-img' key={pokemon.name}></img>\r\n            </div>\r\n          </fieldset>\r\n          <div className='poke-type-container'>\r\n              {pokemon.types.map((type) => React.Children.toArray(<PokemonTypeButton typeString={type.type.name} isButton={false}/>))}\r\n          </div>\r\n          <p className='ability-text'> Abilities: </p>\r\n          <div className='ability-container'>\r\n            {React.Children.toArray(abilities.map((abilityData) => (\r\n              <RenderPokemonAbilityButton abilityData={abilityData} updateAbilityToDisplay={updateAbilityToDisplay} />\r\n            )))}\r\n          </div>\r\n          <AnimatePresence exitBeforeEnter={true}>\r\n            {(abilityToDisplay.length === 0) ? (\r\n                <></>\r\n              ) : (\r\n                  <RenderPokemonAbilityBox ability={abilityToDisplay} key={abilityToDisplay}/>\r\n              )}\r\n          </AnimatePresence>\r\n        </motion.div>\r\n        <motion.div className='stats-container' variants={animateFromTop} initial='before' animate='onScreen' exit='before'>\r\n          <h1>Base Stats:</h1>\r\n          {React.Children.toArray(pokemon.stats.map((statData) => (\r\n            <p>{statData.stat.name.replace('-', ' ')} - {statData.base_stat}</p>\r\n          )))}\r\n          <p>Base Exp - {pokemon.base_experience}</p>\r\n        </motion.div>\r\n        {(speciesData.length === 0) ? (\r\n          <></>\r\n        ) : (\r\n          <motion.div className='basic-info-container' variants={animateFromTop} initial='before' animate='onScreen' exit='before'>\r\n            <h1>Info:</h1>\r\n            <p>Weight - {pokemon.weight}</p>\r\n            <p>Base Happiness - {speciesData.base_happiness}</p>\r\n            <p>Capture Rate - {speciesData.capture_rate}</p>\r\n            {console.log(speciesData)}\r\n            {speciesData.genera.map((genusData) => (\r\n              (genusData.language.name === \"en\") ? (\r\n                <p>Genus - {genusData.genus}</p>\r\n              ) : (\r\n                <></>\r\n            )))}\r\n            <p>Habitat - {speciesData.habitat.name}</p>\r\n            <p>Egg Groups: </p>\r\n            {speciesData.egg_groups.map((eggGroupData) => (\r\n              <p>{eggGroupData.name}</p>\r\n            ))}\r\n            <p></p>\r\n          </motion.div>\r\n        )}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default RenderPokemonInfo;\r\n\r\n\r\n/*\r\n      <div style={{\r\n        height: '600px',\r\n        width: '420px',\r\n        background: 'linear-gradient()',\r\n      }}>\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}