{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaco\\\\Desktop\\\\Pokemon Project\\\\Pokedex\\\\pokedex\\\\src\\\\PokemonCard\\\\PokemonCard.js\";\nimport React from \"react\";\nimport PokeColour from \"../TypeEnum.ts\";\nimport './PokemonCard.css';\nimport PokemonTypeButton from \"../PokemonTypeButton/PokemonTypeButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PokemonCard = props => {\n  const colours = [];\n  const pokemonCurrentTypes = [];\n  let gradientString = \"\";\n  let showPokemon = false;\n  console.log(\"Test\");\n  props.pokemonToUse.types.map(typeData => {\n    colours.push(PokeColour[typeData.type.name]);\n    pokemonCurrentTypes.push(typeData.type.name);\n  });\n\n  if (colours.length === 1) {\n    const colourRGB = [colours[0].slice(1, 3), colours[0].slice(3, 5), colours[0].slice(5, 7)];\n    const lighterColour = colourRGB.map(colour => Math.round(parseInt(colour, 16) * 1.4)).join();\n    const darkerColour = colourRGB.map(colour => Math.round(parseInt(colour, 16) * 0.8)).join();\n    gradientString = 'rgb(' + lighterColour + ')' + ', rgb(' + darkerColour + ')';\n  } else {\n    gradientString = colours[0] + ', ' + colours[1];\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      id: props.pokemonToUse.id,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: \"linear-gradient(120deg, \" + gradientString + \")\",\n          height: '200px',\n          borderRadius: '5px'\n        },\n        id: props.pokemonToUse.id,\n        onClick: () => props.updateIdCall(),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + props.pokemonToUse.id + '.svg',\n          className: \"poke-img\",\n          id: props.pokemonToUse.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-info-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: props.pokemonToUse.id,\n            children: props.pokemonToUse.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-button-container\",\n          children: pokemonCurrentTypes.map(typeData => /*#__PURE__*/_jsxDEV(PokemonTypeButton, {\n            typeString: typeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = PokemonCard;\nexport default PokemonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"sources":["C:/Users/jaco/Desktop/Pokemon Project/Pokedex/pokedex/src/PokemonCard/PokemonCard.js"],"names":["React","PokeColour","PokemonTypeButton","PokemonCard","props","colours","pokemonCurrentTypes","gradientString","showPokemon","console","log","pokemonToUse","types","map","typeData","push","type","name","length","colourRGB","slice","lighterColour","colour","Math","round","parseInt","join","darkerColour","id","backgroundImage","height","borderRadius","updateIdCall"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PokeColour from \"../TypeEnum.ts\";\r\nimport './PokemonCard.css'\r\nimport PokemonTypeButton from \"../PokemonTypeButton/PokemonTypeButton.js\";\r\n\r\n\r\nconst PokemonCard = (props) => {\r\n    const colours = [];\r\n    const pokemonCurrentTypes = []\r\n    let gradientString = \"\";\r\n    let showPokemon = false;\r\n    console.log(\"Test\");\r\n    props.pokemonToUse.types.map((typeData) => {\r\n        colours.push(PokeColour[typeData.type.name]);\r\n        pokemonCurrentTypes.push(typeData.type.name);\r\n    })\r\n\r\n    if(colours.length === 1) {\r\n        const colourRGB = [colours[0].slice(1, 3), colours[0].slice(3, 5), colours[0].slice(5, 7)];\r\n        const lighterColour = colourRGB.map(colour => (Math.round(parseInt(colour, 16) * 1.4))).join();\r\n        const darkerColour = colourRGB.map(colour => (Math.round(parseInt(colour, 16) * 0.8))).join();\r\n        gradientString = 'rgb(' + lighterColour + ')' + ', rgb(' + darkerColour + ')';\r\n    } else {\r\n        gradientString = colours[0] + ', ' + colours[1];\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className='card' id={props.pokemonToUse.id}>\r\n          <div style={{\r\n            backgroundImage: \"linear-gradient(120deg, \" + gradientString + \")\",\r\n            height: '200px',\r\n            borderRadius: '5px'}} id={props.pokemonToUse.id} onClick={() => props.updateIdCall()}>\r\n            <img src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/' + props.pokemonToUse.id + '.svg'} className='poke-img' id={props.pokemonToUse.id}/>\r\n            <div className='card-info-container'>\r\n              <p id={props.pokemonToUse.id}>{props.pokemonToUse.name}</p>\r\n            </div>\r\n            <div className='card-button-container'>\r\n              {pokemonCurrentTypes.map((typeData) => (\r\n                <PokemonTypeButton typeString={typeData}></PokemonTypeButton>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default PokemonCard;"]},"metadata":{},"sourceType":"module"}